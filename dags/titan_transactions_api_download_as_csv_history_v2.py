import base64
from airflow import DAG
from airflow.operators.empty import EmptyOperator
from airflow.operators.python import PythonOperator
import pandas as pd
import numpy as np
import sys
import time
import requests
import json
from string import punctuation
from airflow.hooks.base import BaseHook
from airflow.providers.google.suite.operators.sheets import GSheetsHook
from airflow.providers.amazon.aws.hooks.redshift_sql import RedshiftSQLHook
from airflow.providers.google.suite.hooks.drive import GoogleDriveHook
from airflow.providers.amazon.aws.transfers.google_api_to_s3 import GoogleApiToS3Operator
from airflow.providers.amazon.aws.hooks.s3 import S3Hook
from airflow.providers.amazon.aws.operators.s3 import S3DeleteObjectsOperator, S3CopyObjectOperator
from airflow.providers.google.cloud.transfers.gdrive_to_local import GoogleDriveToLocalOperator
from googleapiclient.discovery import build
from airflow.providers.amazon.aws.transfers.s3_to_redshift import S3ToRedshiftOperator
from airflow.providers.amazon.aws.transfers.local_to_s3 import LocalFilesystemToS3Operator
from airflow.providers.sftp.operators.sftp import SFTPOperator
from airflow.providers.sftp.hooks.sftp import SFTPHook
from airflow.models.param import Param

from airflow.exceptions import AirflowException
import io
import os
import hashlib
import logging
import fnmatch
from utils.notification import send_notification
from datetime import datetime, timedelta
from Crypto.Cipher import AES
import binascii
import asyncio
import aiohttp
from airflow.models import XCom


from datetime import datetime, timedelta
DEBUG = False



REDSHIFT_CONN_ID = "paystack_redshift"
REDSHIFT_DATABASE = "paystackharmonyredshift"
REDSHIFT_SCHEMA = "gdrive_ingestions_test"
S3_CONN_ID = 'paystack_s3'
S3_BUCKET_NAME = 'paystack-datalake'
S3_PREFIX_START = 'gdrive_files/s3_files/titan_transactions'
GDRIVE_CONN = "gdrive_service_account"
TITAN_API_CRED = 'titan_api'
SECRET = BaseHook.get_connection(TITAN_API_CRED).password
HOST = 'https://appsecure.titantrustbank.com'
CLIENT_ID = 'PaystackPytLtdNBbQs'
CHANNEL = '2'
ENCRYPTION_DETAILS_ENDPOINT = '/TitanTrustBankESB/GetEncryptionDetails'
TOKEN_ENDPOINT = '/TitanTrustBankESB/Authentication/tokengeneration/getToken'
STATEMENT_ENDPOINT = '/TitanTrustBankESB/enquiry/StatementEnquiry/SendStatement'
STATEMENT_ENDPOINT = '/TitanTrustBankESB/enquiry/StatementEnquiry/TransactionList'

# accounts_list = [{'account_number' : '0000251250' ,'start_date': '2022-02-10'},
# {'account_number' : '0000266063' ,'start_date': '2022-03-11' }]




START_DATE = '2022-01-01'

def date_range(START_DATE,END_DATE):
    required_date = START_DATE
    while required_date <= END_DATE:
        yield required_date
        if DEBUG:
            return
        required_date = required_date + timedelta(days=1)


def get_last_max_date():
    redshift_hook = RedshiftSQLHook(redshift_conn_id=REDSHIFT_CONN_ID)
    sql = f"select coalesce(MAX(TO_DATE(replace(split_part(split_part(file_name,'/',4),'_',4),'.csv',''),'YYYYMMDD')),'2021-12-31'::date) as max_dt from s3_ingestions.load_process_reference  where file_name like '%titan_transactions_%'  and processed = True"
    print(sql)
    result = redshift_hook.get_first(sql)
    if result and result[0]:
        result = result[0]
    return (result)


def decrypt_message(encryptedmessage, key, iv):
    BS = AES.block_size
    unpad = lambda s: s[:-ord(s[len(s) - 1:])]
    key = key.encode("utf-8")
    #iv = iv.encode("utf-8")
    
    #encryptedmessage = encryptedmessage.decode("utf-8")

    iv = encryptedmessage[:16]
    #raw = pad(message).encode("utf8")

    cipher = AES.new(key=key, mode=AES.MODE_CBC, iv=iv)
    #r = cipher.decrypt(encryptedmessage[16:])
    r = cipher.decrypt(encryptedmessage)
    r = binascii.hexlify(r).decode("utf-8")
    return r

def encrypt_message(message, key, iv):
    BS = AES.block_size
    pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)
    key = key.encode("utf-8")
    iv = iv.encode("utf-8")
    raw = pad(message).encode("utf8")
    cipher = AES.new(key=key, mode=AES.MODE_CBC, iv=iv)
    r = cipher.encrypt(raw)
    r = binascii.hexlify(r).decode("utf-8")
    return r


def get_token():
    auth = base64.b64encode((CLIENT_ID + ":" + SECRET).encode("utf-8"))
    r = (requests.get(f'{HOST}{ENCRYPTION_DETAILS_ENDPOINT}', headers={'Authorization': auth})).headers
    print("r:",r)
    iv = r['IV']
    key = r['Key']

    encrypted_secret = encrypt_message(SECRET, key, iv)

    headers = {'Channel': CHANNEL, 'ClientID': CLIENT_ID, 'Secret': encrypted_secret,
               'Content-Type': 'application/json'}
    r = requests.get(f'{HOST}{TOKEN_ENDPOINT}', headers=headers)
    r = json.loads(r.text)
    token = r['token']
    return iv, key, token

iv, key, token = get_token()
encrypted_token = encrypt_message(token, key, iv)
headers = {'Authorization': encrypted_token, 'ClientID': CLIENT_ID, 'Content-Type': 'application/json'}

def read_data_from_table(account_number):
    pass
    





def upload_file_to_s3(**kwargs):
    try:
        #Get file specific details
        task_id = kwargs.get('task_id', 'upload_file_to_s3')
        file_name_with_path = kwargs.get('file_name_with_path') #it has fullpath
        local_path = kwargs.get('local_path', '/tmp')
        base_name, extension = os.path.splitext(file_name_with_path)
        new_local_path_csv = local_path + '/' + base_name + '.csv'
        s3_bucket_name = kwargs.get('bucket_name', S3_BUCKET_NAME)
        s3_prefix_start = kwargs.get('s3_prefix_start', S3_PREFIX_START)
        s3_folder_name = '{}/{}'.format(s3_prefix_start, file_name_with_path)
        

        s3_upload_operator = LocalFilesystemToS3Operator(
            task_id=task_id,
            aws_conn_id=S3_CONN_ID,
            filename=new_local_path_csv,
            dest_key=s3_folder_name, #+ '/' + s3_upload_file_name_with_path,
            dest_bucket=s3_bucket_name,
            replace=True
        )

        s3_upload_operator.execute(context=None)
        os.remove('{}'.format(new_local_path_csv))


    except Exception as err:
        print(err)
        message = "Function upload_file_to_s3 failed : \n" + \
            str(err)
        send_notification(type="error", message=message)
        # raise AirflowException(message)
        raise ValueError(message)

def call_api_url(account_number,start_date,end_date):
    max_retries = 10
    retry_delay = 15  # 15 seconds
    for attempt in range(1, max_retries + 1):
        try:
            print(f'Getting statement for {account_number} between {start_date} and {end_date}')
            encrypted_token = encrypt_message(token, key, iv)
            headers = {'Authorization': encrypted_token, 'ClientID': CLIENT_ID, 'Content-Type': 'application/json'}
            data = {"accountNumber": account_number, "startDate": start_date, "endDate": end_date}
            encrypted_fields = encrypt_message(json.dumps(data), key, iv)
            fields = json.dumps({"Content": encrypted_fields, "HTTPAction": "1"})
            r = (requests.post(f'{HOST}{STATEMENT_ENDPOINT}', headers=headers, data=fields))
            print(r.text)
            if r.ok is True:
                if int(json.loads(r.text)['responseCode']) == 2 and json.loads(r.text)['responseMessage'] in ['Transaction list is empty','Account number is invalid','Invalid date']:
                    #columns_list = ['transactiontype', 'amount', 'sessionid', 'destinationbankcode', 'narration', 'channelcode', 'channel', 'sourceaccount', 'sourceaccountname', 'sourceaccountbvn', 'destinationaccount', 'destinationaccountname', 'destinationaccountbvn', 'transactiondate', 'transactionstatusmessage', 'id', 'createdon', 'isdeleted']
                    columns_list = ['currencyCode', 'narration', 'statusMessage', 'transactionAmount', 'transactionDate', 'transactionType', 'transaction_Type', 'id','createdOn', 'isDeleted']
                    df = pd.DataFrame(columns=columns_list)
                    df['_account_number'] = account_number
                    df['_start_date'] = start_date
                    df['_end_date'] = end_date
                    df['_row_number'] = df.index
                    with open('/tmp/titan_transactions_v2_unprocessed.txt','a') as unpr:
                        unpr.write(f"{account_number}_{datetime.strftime(datetime.strptime(start_date, '%m/%d/%Y') ,'%Y-%m-%d')}_{json.loads(r.text)['responseMessage']}\n")
                    return df
                
                elif int(json.loads(r.text)['responseCode']) != 0:
                    print('Problem with response')
                    print(r.text)
                    raise ValueError
                else:
                    df = pd.DataFrame(json.loads(r.text)['transactionList'])
                    if df.size != 0:
                        df.columns = [c.lower() for c in df.columns]
                        df['_account_number'] = account_number
                        df['_start_date'] = datetime.strftime(datetime.strptime(start_date, '%m/%d/%Y') ,'%Y-%m-%d')
                        df['_end_date'] = datetime.strftime(datetime.strptime(end_date, '%m/%d/%Y') ,'%Y-%m-%d')
                        df['_row_number'] = df.index
                        return df
            else:
                raise requests.HTTPError
        except (requests.HTTPError, KeyError) as e:
            print(f"Attempt {attempt} failed with error: {e}")
            print(f"Attempted  for : {account_number} {start_date} {end_date}")
            if attempt < max_retries:
                print(f"Retrying in {retry_delay} seconds...")
                time.sleep(retry_delay)
            else:
                message = "Max retries reached. Exiting loop."
                print(message)
                raise AirflowException(message)
        except Exception as err:
            print(f"Attempt {attempt} failed with error: {str(err)}")
            print(f"Attempted url is : {account_number} {start_date} {end_date}")
            if attempt < max_retries:
                print(f"Retrying in {retry_delay} seconds...")
                time.sleep(retry_delay)
            else:
                message = "Max retries reached. Exiting loop."
                print(message)
                raise AirflowException(message)


def call_for_single_date(account_number,start_date,end_date):
    print(f'Date Supplied is {start_date} {end_date}')
    local_path = '/tmp'
    os.makedirs(local_path, exist_ok=True)
    try:
        transactions = call_api_url(account_number=account_number,start_date=start_date,end_date=end_date)
        if len(transactions.index) == 0:
            print(f'Data Frame is Empty For {account_number} {start_date}')
            return
        #deal with balance data
        start_date = datetime.strptime(start_date, '%m/%d/%Y') 
        start_date = datetime.strftime(start_date, '%Y-%m-%d')
        end_date = start_date
        filename = f"titan_transactions_v2_{account_number}_"+start_date.replace('-','')+'_'+end_date.replace('-','')+'.csv'
        transactions.to_csv(os.path.join(local_path, filename), index=False)
        task_id = 'uploading_'+filename
        upload_file_to_s3(task_id=task_id, file_name_with_path=filename, local_path='/tmp',s3_bucket_name=S3_BUCKET_NAME, s3_prefix_start=S3_PREFIX_START)                
        print(f"Saved file: {filename}")


    except Exception as err:        
        print(err)
        message = "Function call_for_single_date failed,  Could not download data from api for dates " + start_date + " and "+ end_date +" : \n" + \
            str(err)
        send_notification(type="error", message=message)
        #raise AirflowException(message)
        raise ValueError(message)

def titan_transactions_api_download_as_csv_v2(params,**kwargs):
    accounts_with_dates = """account_number,inception_date
0000251250,2022-02-10
0000266063,2022-03-11
0000278875,2022-04-11
0000316528,2022-07-08
0000332414,2022-08-20
0000376568,2023-01-06
0000432132,2023-03-01
0000433328,2023-03-02
0000438495,2023-03-08
0000532654,2023-09-13
0000194139,2021-10-29
0000197628,2021-11-01
0000206425,2021-11-23
0000264447,2022-03-11
0000264485,2022-03-11
0000264777,2022-03-11
0000265028,2022-03-11
0000265224,2022-03-11
0000265781,2022-03-11
0000336986,2022-09-02
0000351095,2022-10-18
0000367331,2022-11-30
0000375956,2023-01-04
0000508112,2023-07-09
0000194108,2021-10-29
0000213706,2021-12-08
0000213737,2021-12-08
0000251384,2022-02-10
0000264588,2022-03-11
0000265080,2022-03-11
0000266300,2022-03-11
0000278734,2022-04-11
0000320004,2022-07-20
0000323335,2022-07-26
0000339530,2022-09-11
0000341146,2022-09-14
0000353635,2022-10-25
0000438392,2023-03-08
0000460847,2023-04-04
0000481226,2023-05-10
1000000204,2023-08-24
0000532070,2023-09-11
0000194012,2021-10-29
0000251171,2022-02-10
0000259933,2022-03-01
0000260353,2022-03-01
0000260669,2022-03-01
0000265695,2022-03-11
0000284214,2022-04-25
0000333947,2022-08-24
0000347784,2022-10-06
0000377046,2023-01-09
0000463879,2023-04-07
0000467853,2023-04-15
0000481192,2023-05-10
0000338911,2022-09-08
0000251377,2022-02-10
0000260872,2022-03-01
0000288339,2022-05-05
0000289329,2022-05-09
0000312544,2022-06-29
0000376795,2023-01-06
0000455931,2023-03-28
0000460555,2023-04-03
0000491247,2023-05-26
0000496383,2023-06-09
0000529278,2023-08-31
0000532520,2023-09-12
0000265530,2022-03-11
0000265633,2022-03-11
0000313936,2022-07-02
0000364983,2022-11-24
0000370717,2022-12-09
0000419151,2023-02-15
0000463965,2023-04-08
0000510986,2023-07-15
0000519123,2023-08-04
0000526741,2023-08-25
0000251432,2022-02-10
0000260858,2022-03-01
0000265901,2022-03-11
0000342961,2022-09-21
0000366028,2022-11-26
0000377455,2023-01-09
0000451892,2023-03-23
0000453009,2023-03-24
0000480700,2023-05-10
0000484382,2023-05-15
0000521887,2023-08-11
0000260690,2022-03-01
0000260889,2022-03-01
0000265217,2022-03-11
0000266018,2022-03-11
0000266551,2022-03-11
0000278703,2022-04-11
0000288061,2022-05-04
0000365997,2022-11-25
0000379284,2023-01-15
0000381838,2023-01-22
0000440207,2023-03-09
0000481264,2023-05-10
0000491106,2023-05-26
0000507751,2023-07-07
0000522248,2023-08-11
0000197972,2021-11-03
0000260494,2022-03-01
0000264911,2022-03-11
0000265554,2022-03-11
0000273461,2022-03-29
0000278868,2022-04-11
0000324521,2022-07-28
0000343944,2022-09-23
0000369218,2022-12-06
0000371109,2022-12-12
0000439791,2023-03-09
0000464333,2023-04-11
0000481219,2023-05-10
0000513994,2023-07-23
0000201846,2021-11-15
0000206401,2021-11-23
0000226412,2022-01-04
0000226474,2022-01-04
0000266032,2022-03-11
0000278923,2022-04-11
0000336508,2022-09-01
0000367898,2022-12-01
0000380257,2023-01-18
0000438282,2023-03-08
0000439571,2023-03-09
0000450527,2023-03-21
0000458121,2023-03-30
0000480470,2023-05-10
0000480511,2023-05-10
0000481336,2023-05-10
0000496840,2023-06-10
0000533747,2023-09-15
0000260418,2022-03-01
0000265774,2022-03-11
0000265815,2022-03-11
0000265994,2022-03-11
0000266692,2022-03-11
0000326439,2022-08-04
0000373581,2022-12-22
0000478132,2023-05-08
0000490185,2023-05-25
0000504970,2023-06-29
0000505520,2023-07-03
0000197161,2021-11-01
0000197367,2021-11-01
0000265499,2022-03-11
0000265925,2022-03-11
0000278851,2022-04-11
0000322682,2022-07-25
0000325748,2022-08-01
0000356313,2022-11-01
0000381216,2023-01-20
0000449121,2023-03-18
0000519604,2023-08-05
0000207934,2021-11-26
0000260597,2022-03-01
0000264681,2022-03-11
0000266348,2022-03-11
0000327601,2022-08-08
0000354845,2022-10-27
0000361047,2022-11-15
0000364392,2022-11-22
0000380790,2023-01-19
0000477960,2023-05-05
0000494712,2023-06-05
0000201901,2021-11-15
0000259964,2022-03-01
0000265396,2022-03-11
0000278796,2022-04-11
0000379648,2023-01-17
0000419948,2023-02-16
0000431881,2023-02-28
0000435267,2023-03-05
0000448863,2023-03-17
0000460995,2023-04-04
0000480638,2023-05-10
0000481288,2023-05-10
0000496503,2023-06-09
0000519202,2023-08-04
0000197408,2021-11-01
0000273959,2022-03-30
0000343700,2022-09-22
0000356162,2022-10-31
0000364000,2022-11-22
0000365148,2022-11-24
0000374186,2022-12-24
0000391251,2023-02-03
0000448492,2023-03-17
0000478981,2023-05-09
0000481178,2023-05-10
0000494327,2023-06-05
0000524314,2023-08-18
0000529955,2023-09-03
0000531822,2023-09-10
0000251418,2022-02-10
0000260700,2022-03-01
0000325456,2022-08-01
0000346251,2022-09-30
0000357860,2022-11-04
0000373471,2022-12-21
0000381553,2023-01-20
0000455986,2023-03-28
0000529924,2023-09-02
0000194098,2021-10-29
0000195875,2021-10-29
0000197312,2021-11-01
0000264863,2022-03-11
0000275379,2022-04-01
0000287648,2022-05-03
0000322709,2022-07-25
0000338650,2022-09-08
0000343906,2022-09-23
0000376489,2023-01-05
0000381687,2023-01-20
0000485750,2023-05-16
0000495812,2023-06-07
0000264667,2022-03-11
0000264739,2022-03-11
0000334827,2022-08-26
0000354670,2022-10-26
0000364646,2022-11-23
0000367362,2022-11-30
0000411193,2023-02-10
0000437089,2023-03-07
0000505867,2023-07-03
0000525799,2023-08-23
0000197460,2021-11-01
0000229561,2022-01-10
0000264973,2022-03-11
0000265736,2022-03-11
0000266379,2022-03-11
0000322091,2022-07-25
0000350971,2022-10-18
0000431829,2023-02-28
0000440805,2023-03-09
0000496273,2023-06-09
0000503980,2023-06-26
0000519226,2023-08-04
0000528776,2023-08-30
0000534311,2023-09-18
0000265334,2022-03-11
0000265389,2022-03-11
0000265561,2022-03-11
0000306260,2022-06-16
0000312513,2022-06-28
0000345429,2022-09-28
0000366169,2022-11-28
0000374382,2022-12-26
0000455065,2023-03-27
0000480690,2023-05-10
0000481233,2023-05-10
0000527470,2023-08-28
0000197226,2021-11-01
0000197257,2021-11-01
0000213713,2021-12-08
0000214789,2021-12-13
0000260717,2022-03-01
0000264629,2022-03-11
0000264818,2022-03-11
0000265011,2022-03-11
0000266599,2022-03-11
0000281488,2022-04-15
0000306789,2022-06-17
0000328299,2022-08-10
0000342954,2022-09-21
0000372072,2022-12-15
0000419034,2023-02-15
0000194081,2021-10-29
0000197202,2021-11-01
0000260676,2022-03-01
0000265729,2022-03-11
0000290907,2022-05-12
0000290921,2022-05-12
0000332586,2022-08-21
0000333208,2022-08-23
0000349049,2022-10-12
0000375516,2023-01-02
0000379576,2023-01-16
0000381735,2023-01-21
0000421145,2023-02-17
0000481893,2023-05-10
0000484454,2023-05-15
0000499896,2023-06-16
0000504602,2023-06-27
0000516555,2023-07-29
0000531451,2023-09-07
0000251308,2022-02-10
0000266049,2022-03-11
0000278686,2022-04-11
0000334315,2022-08-25
0000348736,2022-10-11
0000367348,2022-11-30
0000433957,2023-03-03
0000449004,2023-03-18
0000515682,2023-07-27
0000528783,2023-08-30
0000197594,2021-11-01
0000265413,2022-03-11
0000266685,2022-03-11
0000278727,2022-04-11
0000323342,2022-07-26
0000325542,2022-08-01
0000371020,2022-12-09
0000373206,2022-12-21
0000380941,2023-01-19
0000389315,2023-02-02
0000480676,2023-05-10
0000514063,2023-07-24
0000523331,2023-08-15
0000528635,2023-08-30
0000201877,2021-11-15
0000229578,2022-01-10
0000251164,2022-02-10
0000325779,2022-08-01
0000374313,2022-12-25
0000433438,2023-03-02
0000463831,2023-04-07
0000488971,2023-05-23
0000508057,2023-07-08
0000516713,2023-07-31
0000523348,2023-08-16
0000197264,2021-11-01
0000206391,2021-11-23
0000260779,2022-03-01
0000308707,2022-06-21
0000322077,2022-07-25
0000356540,2022-11-01
0000357389,2022-11-03
0000414448,2023-02-13
0000449190,2023-03-19
0000481350,2023-05-10
0000517600,2023-08-02
0000518944,2023-08-03
0000521935,2023-08-11
0000279669,2022-04-12
0000322084,2022-07-25
0000346309,2022-09-30
0000371776,2022-12-13
0000385063,2023-01-26
0000444841,2023-03-14
0000449042,2023-03-18
0000451177,2023-03-22
0000480645,2023-05-10
0000480793,2023-05-10
0000514207,2023-07-24
0000195583,2021-10-29
0000206463,2021-11-23
0000260793,2022-03-01
0000265231,2022-03-11
0000265420,2022-03-11
0000265743,2022-03-11
0000266276,2022-03-11
0000325418,2022-08-01
0000370724,2022-12-09
0000432826,2023-03-01
0000464498,2023-04-11
0000471102,2023-04-20
0000478008,2023-05-06
0000491838,2023-05-29
0000505489,2023-06-30
0000264540,2022-03-11
0000266582,2022-03-11
0000283561,2022-04-22
0000333370,2022-08-23
0000342198,2022-09-19
0000361786,2022-11-16
0000370906,2022-12-09
0000374502,2022-12-27
0000375767,2023-01-04
0000481130,2023-05-10
0000510962,2023-07-14
0000260724,2022-03-01
0000266630,2022-03-11
0000278538,2022-04-11
0000278820,2022-04-11
0000324552,2022-07-28
0000335587,2022-08-30
0000364385,2022-11-22
0000366042,2022-11-26
0000378971,2023-01-13
0000391213,2023-02-02
0000480085,2023-05-10
0000492141,2023-05-30
0000492653,2023-05-31
0000522262,2023-08-12
0000527243,2023-08-25
0000214796,2021-12-13
0000264571,2022-03-11
0000265516,2022-03-11
0000268799,2022-03-16
0000278631,2022-04-11
0000334267,2022-08-24
0000371800,2022-12-14
0000382567,2023-01-24
0000464302,2023-04-11
0000534249,2023-09-17
0000210114,2021-11-30
0000210334,2021-11-30
0000251267,2022-02-10
0000260384,2022-03-01
0000328127,2022-08-09
0000342181,2022-09-19
0000365698,2022-11-25
0000368417,2022-12-02
0000374272,2022-12-24
0000379174,2023-01-15
0000397985,2023-02-07
0000444669,2023-03-14
0000453401,2023-03-24
0000479933,2023-05-09
0000521124,2023-08-09
0000081987,2022-01-01
0000068164,2022-01-01
0000197453,2021-11-01
0000264887,2022-03-11
0000264959,2022-03-11
0000266678,2022-03-11
0000266702,2022-03-11
0000331486,2022-08-18
0000357444,2022-11-03
0000375736,2023-01-04
0000420100,2023-02-16
0000442696,2023-03-13
0000493564,2023-06-01
0000523070,2023-08-15
0000523881,2023-08-17
0000264564,2022-03-11
0000264942,2022-03-11
0000265279,2022-03-11
0000265303,2022-03-11
0000265664,2022-03-11
0000299553,2022-06-02
0000358348,2022-11-07
0000376647,2023-01-06
0000425174,2023-02-21
0000455962,2023-03-28
0000462157,2023-04-05
0000463776,2023-04-07
0000480504,2023-05-10
0000516610,2023-07-30
0000529900,2023-09-01
0000531248,2023-09-07
0000260425,2022-03-01
0000260607,2022-03-01
0000260762,2022-03-01
0000281529,2022-04-15
0000335958,2022-08-31
0000380037,2023-01-17
0000389597,2023-02-02
0000406603,2023-02-09
0000499377,2023-06-16
0000226450,2022-01-04
0000226773,2022-01-05
0000264870,2022-03-11
0000264928,2022-03-11
0000265042,2022-03-11
0000265255,2022-03-11
0000363261,2022-11-19
0000458822,2023-03-30
0000492213,2023-05-30
0000529931,2023-09-03
0000197587,2021-11-01
0000229633,2022-01-10
0000264832,2022-03-11
0000324174,2022-07-28
0000329935,2022-08-15
0000345560,2022-09-28
0000364529,2022-11-23
0000491814,2023-05-29
0000505025,2023-06-30
0000531262,2023-09-07
0000531839,2023-09-10
0000197398,2021-11-01
0000214772,2021-12-13
0000329052,2022-08-12
0000334274,2022-08-24
0000356076,2022-10-30
0000438316,2023-03-08
0000463893,2023-04-07
0000466454,2023-04-13
0000478015,2023-05-06
0000484344,2023-05-15
0000496046,2023-06-08
0000501546,2023-06-21
0000264856,2022-03-11
0000266506,2022-03-11
0000266661,2022-03-11
0000291179,2022-05-12
0000306026,2022-06-16
0000323359,2022-07-26
0000374674,2022-12-28
0000441785,2023-03-10
0000445075,2023-03-14
0000501694,2023-06-21
0000523623,2023-08-16
0000197415,2021-11-01
0000211678,2021-12-02
0000251322,2022-02-10
0000264478,2022-03-11
0000264650,2022-03-11
0000265310,2022-03-11
0000265956,2022-03-11
0000266403,2022-03-11
0000321719,2022-07-22
0000323919,2022-07-27
0000415737,2023-02-13
0000481240,2023-05-10
0000524534,2023-08-21
0000190557,2022-01-01
0000259995,2022-03-01
0000266362,2022-03-11
0000275355,2022-04-01
0000298525,2022-05-31
0000342947,2022-09-21
0000345199,2022-09-27
0000356502,2022-11-01
0000430152,2023-02-25
0000433603,2023-03-02
0000480731,2023-05-10
0000481185,2023-05-10
0000493021,2023-06-01
0000517693,2023-08-02
0000522822,2023-08-15
0000197611,2021-11-01
0000266221,2022-03-11
0000369892,2022-12-07
0000409439,2023-02-09
0000421200,2023-02-17
0000467097,2023-04-14
0000480528,2023-05-10
0000501728,2023-06-21
0000513451,2023-07-21
0000514001,2023-07-24
0000529979,2023-09-03
0000197192,2021-11-01
0000197532,2021-11-01
0000197563,2021-11-01
0000197422,2021-11-01
0000260865,2022-03-01
0000265262,2022-03-11
0000265482,2022-03-11
0000278662,2022-04-11
0000322060,2022-07-25
0000323373,2022-07-26
0000323940,2022-07-27
0000374193,2022-12-24
0000454381,2023-03-26
0000460744,2023-04-04
0000503227,2023-06-23
0000508143,2023-07-10
0000526710,2023-08-25
0000252044,2022-02-11
0000260456,2022-03-01
0000266441,2022-03-11
0000290969,2022-05-12
0000365492,2022-11-25
0000372096,2022-12-15
0000375406,2023-01-02
0000385874,2023-01-30
0000415713,2023-02-13
0000467011,2023-04-14
0000511017,2023-07-16
0000206384,2021-11-26
0000260755,2022-03-01
0000314342,2022-07-04
0000320107,2022-07-20
0000321197,2022-07-21
0000325463,2022-08-01
0000365715,2022-11-25
0000371044,2022-12-11
0000415689,2023-02-13
0000450132,2023-03-21
0000457007,2023-03-29
0000457179,2023-03-29
0000459678,2023-04-01
0000488706,2023-05-23
0000530894,2023-09-06
0000265138,2022-03-11
0000278916,2022-04-11
0000280168,2022-04-13
0000294273,2022-05-20
0000331699,2022-08-19
0000334205,2022-08-24
0000382189,2023-01-23
0000426009,2023-02-21
0000460146,2023-04-03
0000461002,2023-04-04
0000482498,2023-05-11
0000486623,2023-05-17
0000514135,2023-07-24
0000520639,2023-08-09
0000531145,2023-09-07
0000226539,2022-01-04
0000265918,2022-03-11
0000325449,2022-08-01
0000344398,2022-09-24
0000371336,2022-12-13
0000374492,2022-12-27
0000442366,2023-03-12
0000508923,2023-07-12
0000529694,2023-09-01
0000532506,2023-09-12
0000229554,2022-01-10
0000264801,2022-03-11
0000265059,2022-03-11
0000265341,2022-03-11
0000266520,2022-03-11
0000339341,2022-09-09
0000375066,2022-12-30
0000453078,2023-03-24
0000480717,2023-05-10
0000490381,2023-05-25
0000492426,2023-05-30
0000506015,2023-07-04
0000195521,2021-10-29
0000197549,2021-11-01
0000261532,2022-03-03
0000281581,2022-04-16
0000325432,2022-08-01
0000371099,2022-12-12
0000373945,2022-12-23
0000451160,2023-03-22
0000451184,2023-03-22
0000467808,2023-04-15
0000481415,2023-05-10
0000497737,2023-06-14
0000207879,2021-11-26
0000259919,2022-03-01
0000260504,2022-03-01
0000265822,2022-03-11
0000266434,2022-03-11
0000366080,2022-11-26
0000368280,2022-12-01
0000435724,2023-03-06
0000438347,2023-03-08
0000438419,2023-03-08
0000481408,2023-05-10
0000500525,2023-06-19
0000505496,2023-07-01
0000264605,2022-03-11
0000264966,2022-03-11
0000265475,2022-03-11
0000277036,2022-04-06
0000278789,2022-04-11
0000302619,2022-06-08
0000325810,2022-08-01
0000343504,2022-09-22
0000364660,2022-11-23
0000371068,2022-12-11
0000372728,2022-12-19
0000435652,2023-03-06
0000435700,2023-03-06
0000481329,2023-05-10
0000500532,2023-06-19
0000504372,2023-06-27
0000505513,2023-07-02
0000197233,2021-11-01
0000209062,2021-11-30
0000251188,2022-02-10
0000251205,2022-02-10
0000278693,2022-04-11
0000279676,2022-04-12
0000325528,2022-08-01
0000367654,2022-11-30
0000507098,2023-07-05
0000514829,2023-07-25
0000198137,2021-11-03
0000226508,2022-01-04
0000232088,2022-01-14
0000260638,2022-03-01
0000265705,2022-03-11
0000266180,2022-03-11
0000278909,2022-04-11
0000325504,2022-08-01
0000333215,2022-08-23
0000359125,2022-11-10
0000374399,2022-12-26
0000395084,2023-02-06
0000457801,2023-03-29
0000478998,2023-05-09
0000522516,2023-08-14
0000197240,2021-11-01
0000251315,2022-02-10
0000251401,2022-02-10
0000265152,2022-03-11
0000265578,2022-03-11
0000266238,2022-03-11
0000323407,2022-07-26
0000432015,2023-03-01
0000438354,2023-03-08
0000492055,2023-05-30
0000522877,2023-08-15
0000533716,2023-09-14
0000210169,2021-11-30
0000213744,2021-12-08
0000260432,2022-03-01
0000260470,2022-03-01
0000264698,2022-03-11
0000318584,2022-07-18
0000322046,2022-07-25
0000354759,2022-10-26
0000371271,2022-12-12
0000377008,2023-01-09
0000395747,2023-02-06
0000411162,2023-02-10
0000418408,2023-02-15
0000450448,2023-03-21
0000462889,2023-04-06
0000493557,2023-06-01
0000493612,2023-06-02
0000194074,2021-10-29
0000197501,2021-11-01
0000198144,2021-11-03
0000203912,2021-12-06
0000251360,2022-02-10
0000263268,2022-03-09
0000265145,2022-03-11
0000266214,2022-03-11
0000266245,2022-03-11
0000294967,2022-05-23
0000321702,2022-07-22
0000335714,2022-08-30
0000343614,2022-09-22
0000347928,2022-10-06
0000378335,2023-01-12
0000469716,2023-04-19
0000508088,2023-07-08
0000527023,2023-08-25
0000196580,2021-10-29
0000260827,2022-03-01
0000266427,2022-03-11
0000272000,2022-03-25
0000329227,2022-08-12
0000336883,2022-09-02
0000348729,2022-10-11
0000373691,2022-12-22
0000377084,2023-01-09
0000418398,2023-02-15
0000420117,2023-02-16
0000432802,2023-03-01
0000438110,2023-03-08
0000456048,2023-03-28
0000459575,2023-03-31
0000467839,2023-04-15
0000525593,2023-08-22
0000201815,2021-11-15
0000210341,2021-11-30
0000212675,2021-12-06
0000266128,2022-03-11
0000279690,2022-04-12
0000287590,2022-05-02
0000333318,2022-08-23
0000365564,2022-11-25
0000377606,2023-01-10
0000453755,2023-03-25
0000480559,2023-05-10
0000533761,2023-09-15
0000197381,2021-11-01
0000265798,2022-03-11
0000265808,2022-03-11
0000266568,2022-03-11
0000266575,2022-03-11
0000328763,2022-08-11
0000333538,2022-08-23
0000339451,2022-09-10
0000362154,2022-11-17
0000367977,2022-12-01
0000374416,2022-12-27
0000387067,2023-01-31
0000395204,2023-02-06
0000418453,2023-02-15
0000447282,2023-03-16
0000481271,2023-05-10
0000491845,2023-05-29
0000508105,2023-07-09
0000197374,2021-11-01
0000210224,2021-11-30
0000229547,2022-01-10
0000260346,2022-03-01
0000264825,2022-03-11
0000265327,2022-03-11
0000265406,2022-03-11
0000447426,2023-03-16
0000467925,2023-04-15
0000480597,2023-05-10
0000480786,2023-05-10
0000499322,2023-06-16
0000251281,2022-02-10
0000259988,2022-03-01
0000266070,2022-03-11
0000373938,2022-12-23
0000375042,2022-12-30
0000460706,2023-04-03
0000513781,2023-07-21
0000201822,2021-11-15
0000214758,2021-12-13
0000251157,2022-02-10
0000264849,2022-03-11
0000265712,2022-03-11
0000280182,2022-04-13
0000282887,2022-04-21
0000343559,2022-09-22
0000356090,2022-10-31
0000357846,2022-11-04
0000366781,2022-11-29
0000369627,2022-12-07
0000375547,2023-01-03
0000438691,2023-03-08
0000496826,2023-06-09
0000518274,2023-08-03
0000522255,2023-08-11
0000523104,2023-08-15
0000527315,2023-08-27
0000529993,2023-09-04
0000530234,2023-09-04
0000201891,2021-11-15
0000264715,2022-03-11
0000264904,2022-03-11
0000281440,2022-04-14
0000327618,2022-08-08
0000338241,2022-09-07
0000367070,2022-11-29
0000370621,2022-12-09
0000372704,2022-12-19
0000375028,2022-12-29
0000411155,2023-02-10
0000430035,2023-02-25
0000512863,2023-07-20
0000515187,2023-07-26
0000207862,2021-11-26
0000272907,2022-03-28
0000294802,2022-05-22
0000312434,2022-06-28
0000323933,2022-07-27
0000349403,2022-10-13
0000364653,2022-11-23
0000366114,2022-11-26
0000373457,2022-12-21
0000394867,2023-02-05
0000395053,2023-02-05
0000442593,2023-03-12
0000458815,2023-03-30
0000480566,2023-05-10
0000480542,2023-05-10
0000481147,2023-05-10
0000494152,2023-06-03
0000499889,2023-06-16
0000530784,2023-09-05
0000512193,2022-01-01
0000336072,2022-01-01
0000207927,2021-11-26
0000251126,2022-02-10
0000278655,2022-04-11
0000302602,2022-06-08
0000324679,2022-07-29
0000354797,2022-10-27
0000371037,2022-12-10
0000373024,2022-12-20
0000374997,2022-12-29
0000459908,2023-04-03
0000464797,2023-04-12
0000494798,2023-06-06
0000512681,2023-07-20
0000529522,2023-09-01
0000206432,2021-11-24
0000265853,2022-03-11
0000266207,2022-03-11
0000266410,2022-03-11
0000345089,2022-09-27
0000345742,2022-09-29
0000365801,2022-11-25
0000435731,2023-03-06
0000441266,2023-03-10
0000477654,2023-05-05
0000480580,2023-05-10
0000484997,2023-05-15
0000485808,2023-05-17
0000493571,2023-06-01
0000516531,2023-07-29
0000528666,2023-08-30
0000531994,2023-09-11
0000212668,2021-12-06
0000260463,2022-03-01
0000335783,2022-08-30
0000358410,2022-11-07
0000364402,2022-11-23
0000367692,2022-11-30
0000430004,2023-02-24
0000469998,2023-04-19
0000497184,2023-06-13
0000505544,2023-07-03
0000206418,2021-11-23
0000210231,2021-11-30
0000264557,2022-03-11
0000280443,2022-04-13
0000326642,2022-08-04
0000369263,2022-12-06
0000371082,2022-12-12
0000376946,2023-01-08
0000419670,2023-02-16
0000446278,2023-03-15
0000468070,2023-04-17
0000479940,2023-05-10
0000498617,2023-06-15
0000527418,2023-08-28
0000531860,2023-09-11
0000210183,2021-11-30
0000251195,2022-02-10
0000260810,2022-03-01
0000266056,2022-03-11
0000334322,2022-08-25
0000355567,2022-10-28
0000368785,2022-12-02
0000469644,2023-04-18
0000480535,2023-05-10
0000529261,2023-08-31
0000197178,2021-11-01
0000212699,2021-12-06
0000229530,2022-01-10
0000251456,2022-02-10
0000260391,2022-03-01
0000260487,2022-03-01
0000264454,2022-03-11
0000265293,2022-03-11
0000266393,2022-03-11
0000364512,2022-11-23
0000365227,2022-11-24
0000394812,2023-02-05
0000432541,2023-03-01
0000480494,2023-05-10
0000492495,2023-05-31
0000513437,2023-07-21
0000209093,2021-11-29
0000251243,2022-02-10
0000251425,2022-02-10
0000260566,2022-03-01
0000265688,2022-03-11
0000306033,2022-06-16
0000323902,2022-07-27
0000334803,2022-08-26
0000350081,2022-10-14
0000362202,2022-11-17
0000375114,2022-12-30
0000380611,2023-01-19
0000385087,2023-01-27
0000438330,2023-03-08
0000461411,2023-04-05
0000465608,2023-04-12
0000491780,2023-05-27
0000508813,2023-07-11
0000531808,2023-09-10
0000197219,2021-11-01
0000264746,2022-03-11
0000264753,2022-03-11
0000265286,2022-03-11
0000266135,2022-03-11
0000278710,2022-04-11
0000336467,2022-09-01
0000356289,2022-10-31
0000366334,2022-11-28
0000376269,2023-01-05
0000378050,2023-01-11
0000447505,2023-03-16
0000457021,2023-03-29
0000493791,2023-06-02
0000497098,2023-06-13
0000500051,2023-06-19
0000505678,2023-07-03
0000332146,2022-01-01
0000196690,2022-01-01
0000260322,2022-03-01
0000265190,2022-03-11
0000278813,2022-04-11
0000374320,2022-12-25
0000394726,2023-02-04
0000411320,2023-02-10
0000447024,2023-03-15
0000491199,2023-05-26
0000504293,2023-06-27
0000512832,2023-07-20
0000522303,2023-08-13
0000526703,2023-08-24
0000530904,2023-09-06
0000195868,2021-10-29
0000214765,2021-12-13
0000265097,2022-03-11
0000265358,2022-03-11
0000265437,2022-03-11
0000265547,2022-03-11
0000305988,2022-06-16
0000321740,2022-07-22
0000326855,2022-08-04
0000375396,2023-01-02
0000385104,2023-01-27
0000461569,2023-04-05
0000464285,2023-04-11
0000480621,2023-05-10
0000482625,2023-05-11
0000504286,2023-06-26
0000510326,2023-07-14
0000515125,2023-07-26
0000516689,2023-07-31
0000197288,2021-11-01
0000201853,2021-11-15
0000264674,2022-03-11
0000265523,2022-03-11
0000265671,2022-03-11
0000293386,2022-05-19
0000302592,2022-06-08
0000364615,2022-11-23
0000376843,2023-01-07
0000503681,2023-06-24
0000513987,2023-07-23
0000517095,2023-07-31
0000519013,2023-08-04
0000251236,2022-02-10
0000260535,2022-03-01
0000266537,2022-03-11
0000275427,2022-04-03
0000278679,2022-04-11
0000330771,2022-08-17
0000332861,2022-08-22
0000438361,2023-03-08
0000468032,2023-04-16
0000505661,2023-07-03
0000510766,2023-07-14
0000511488,2023-07-17
0000213696,2021-12-08
0000264997,2022-03-11
0000278947,2022-04-11
0000292475,2022-05-17
0000321795,2022-07-22
0000326037,2022-08-02
0000349702,2022-10-13
0000350397,2022-10-17
0000484320,2023-05-13
0000504963,2023-06-29
0000520093,2023-08-07
0000521894,2023-08-11
0000197154,2021-11-01
0000204380,2021-11-24
0000213720,2021-12-08
0000226522,2022-01-04
0000260748,2022-03-01
0000260896,2022-03-01
0000265619,2022-03-11
0000276754,2022-04-06
0000325559,2022-08-01
0000333909,2022-08-24
0000347791,2022-10-06
0000357279,2022-11-02
0000367283,2022-11-30
0000368864,2022-12-03
0000369854,2022-12-07
0000374203,2022-12-24
0000376001,2023-01-04
0000380240,2023-01-18
0000460658,2023-04-03
0000469084,2023-04-18
0000480487,2023-05-10
0000492567,2023-05-31
0000522523,2023-08-14
0000260511,2022-03-01
0000260652,2022-03-01
0000264519,2022-03-11
0000266025,2022-03-11
0000278954,2022-04-11
0000370140,2022-12-08
0000465914,2023-04-13
0000494695,2023-06-05
0000497555,2023-06-13
0000511024,2023-07-16
0000527937,2023-08-29
0000209086,2021-11-30
0000264461,2022-03-11
0000265640,2022-03-11
0000284829,2022-04-26
0000326020,2022-08-02
0000374894,2022-12-29
0000375286,2022-12-30
0000415775,2023-02-13
0000451878,2023-03-23
0000487682,2023-05-19
0000523922,2023-08-17
0000194050,2021-10-29
0000264492,2022-03-11
0000265839,2022-03-11
0000289738,2022-05-09
0000323892,2022-07-27
0000335594,2022-08-30
0000379253,2023-01-15
0000429282,2023-02-23
0000432871,2023-03-02
0000488294,2023-05-21
0000494303,2023-06-05
0000499906,2023-06-16
0000502440,2023-06-22
0000531705,2023-09-08
0000211661,2021-12-02
0000278930,2022-04-11
0000281165,2022-04-14
0000291007,2022-05-12
0000367049,2022-11-29
0000367427,2022-11-30
0000372106,2022-12-15
0000381728,2023-01-21
0000462384,2023-04-05
0000493038,2023-06-01
0000495795,2023-06-07
0000529223,2023-08-31
0000251298,2022-02-10
0000260401,2022-03-01
0000266647,2022-03-11
0000415720,2023-02-13
0000438378,2023-03-08
0000438969,2023-03-09
0000466117,2023-04-13
0000480573,2023-05-10
0000480607,2023-05-10
0000481161,2023-05-10
0000496060,2023-06-08
0000503203,2023-06-23
0000527274,2023-08-26
0000226498,2022-01-04
0000260360,2022-03-01
0000264533,2022-03-11
0000265035,2022-03-11
0000301588,2022-06-06
0000372027,2022-12-14
0000379617,2023-01-16
0000449028,2023-03-18
0000468740,2023-04-18
0000469943,2023-04-19
0000494176,2023-06-04
0000496833,2023-06-10
0000509377,2023-07-12
0000509975,2023-07-13
0000523386,2023-08-16
0000264894,2022-03-11
0000266094,2022-03-11
0000266166,2022-03-11
0000278882,2022-04-11
0000286232,2022-04-28
0000313558,2022-07-01
0000332438,2022-08-20
0000365681,2022-11-25
0000367953,2022-12-01
0000368905,2022-12-05
0000384523,2023-01-26
0000462951,2023-04-06
0000485743,2023-05-16
0000510137,2023-07-13
0000530117,2023-09-04
0000532283,2023-09-12
0000251391,2022-02-10
0000260786,2022-03-01
0000267273,2022-03-14
0000326525,2022-08-04
0000344635,2022-09-26
0000376960,2023-01-08
0000453085,2023-03-24
0000460713,2023-04-03
0000468764,2023-04-18
0000478039,2023-05-06
0000493863,2023-06-02
0000494839,2023-06-06
0000514104,2023-07-24
0000534500,2023-09-19
0000197666,2021-11-01
0000265066,2022-03-11
0000266142,2022-03-11
0000494255,2023-06-05
0000495324,2023-06-06
0000499937,2023-06-18
0000501467,2023-06-21
0000534366,2023-09-18
0000209079,2021-11-30
0000265877,2022-03-11
0000275032,2022-03-31
0000382048,2023-01-23
0000432888,2023-03-02
0000439533,2023-03-09
0000439564,2023-03-09
0000441390,2023-03-10
0000493849,2023-06-02
0000195882,2021-10-29
0000212682,2021-12-06
0000259957,2022-03-01
0000265509,2022-03-11
0000266087,2022-03-11
0000266252,2022-03-11
0000266472,2022-03-11
0000294280,2022-05-20
0000334463,2022-08-25
0000344886,2022-09-26
0000353941,2022-10-26
0000359211,2022-11-10
0000413788,2023-02-13
0000511347,2023-07-17
0000260614,2022-03-01
0000265073,2022-03-11
0000265468,2022-03-11
0000265932,2022-03-11
0000321173,2022-07-21
0000359149,2022-11-10
0000373440,2022-12-21
0000377053,2023-01-09
0000481257,2023-05-10
0000482515,2023-05-11
0000489435,2023-05-24
0000496053,2023-06-08
0000496871,2023-06-12
0000497641,2023-06-14
0000506651,2023-07-05
0000521320,2023-08-10
0000527652,2023-08-28
0000531138,2023-09-07
0000197271,2021-11-01
0000250291,2022-02-09
0000260621,2022-03-01
0000367355,2022-11-30
0000376623,2023-01-06
0000395060,2023-02-05
0000435298,2023-03-05
0000449592,2023-03-20
0000453133,2023-03-24
0000464065,2023-04-09
0000505506,2023-07-01
0000516593,2023-07-29
0000531925,2023-09-11
0000197556,2021-11-01
0000264708,2022-03-11
0000267242,2022-03-14
0000275362,2022-04-01
0000338052,2022-09-06
0000357839,2022-11-04
0000452208,2023-03-23
0000469015,2023-04-18
0000507720,2023-07-07
0000508442,2023-07-11
0000207893,2021-11-26
0000226728,2022-01-05
0000396469,2023-02-06
0000499425,2023-06-16
0000507036,2023-07-05
0000507696,2023-07-06
0000197525,2021-11-01
0000197305,2021-11-01
0000197635,2021-11-01
0000265004,2022-03-11
0000265585,2022-03-11
0000275977,2022-04-05
0000277050,2022-04-06
0000321180,2022-07-21
0000355543,2022-10-27
0000358434,2022-11-07
0000365540,2022-11-25
0000419027,2023-02-15
0000453023,2023-03-24
0000495001,2023-06-06
0000519628,2023-08-06
0000194029,2021-10-29
0000232071,2022-01-14
0000266111,2022-03-11
0000266465,2022-03-11
0000278648,2022-04-11
0000278837,2022-04-11
0000287765,2022-05-04
0000290426,2022-05-11
0000375657,2023-01-03
0000505094,2023-06-30
0000265176,2022-03-11
0000265592,2022-03-11
0000265657,2022-03-11
0000325470,2022-08-01
0000366523,2022-11-29
0000374430,2022-12-27
0000478950,2023-05-09
0000480092,2023-05-10
0000480724,2023-05-10
0000507768,2023-07-07
0000527298,2023-08-27
0000194036,2021-10-29
0000197570,2021-11-01
0000265183,2022-03-11
0000265602,2022-03-11
0000266331,2022-03-11
0000266489,2022-03-11
0000269545,2022-03-17
0000278772,2022-04-11
0000443466,2023-03-13
0000449097,2023-03-18
0000497108,2023-06-13
0000510993,2023-07-15
0000534191,2023-09-15
0000534218,2023-09-15
0000197439,2021-11-01
0000207886,2021-11-26
0000266496,2022-03-11
0000325425,2022-08-01
0000326374,2022-08-04
0000330726,2022-08-17
0000364945,2022-11-24
0000365502,2022-11-25
0000370645,2022-12-09
0000401976,2023-02-08
0000447512,2023-03-16
0000464216,2023-04-10
0000488270,2023-05-19
0000512076,2023-07-18
0000526136,2023-08-24
0000532276,2023-09-12
0000195909,2021-10-29
0000251463,2022-02-10
0000264612,2022-03-11
0000266173,2022-03-11
0000317958,2022-07-14
0000372625,2022-12-18
0000480683,2023-05-10
0000502464,2023-06-22
0000513475,2023-07-21
0000197350,2021-11-01
0000260377,2022-03-01
0000266269,2022-03-11
0000266283,2022-03-11
0000266654,2022-03-11
0000303025,2022-06-08
0000371910,2022-12-14
0000374454,2022-12-27
0000433816,2023-03-02
0000438426,2023-03-08
0000464838,2023-04-12
0000492419,2023-05-30
0000499652,2023-06-16
0000226443,2022-01-04
0000251339,2022-02-10
0000266104,2022-03-11
0000284630,2022-04-25
0000428931,2023-02-23
0000446144,2023-03-15
0000478125,2023-05-08
0000480614,2023-05-10
0000481154,2023-05-10
0000500996,2023-06-20
0000501474,2023-06-21
0000505001,2023-06-30
0000227323,2022-01-10
0000229626,2022-01-10
0000260841,2022-03-01
0000264935,2022-03-11
0000265451,2022-03-11
0000330616,2022-08-17
0000409563,2023-02-10
0000421918,2023-02-17
0000438402,2023-03-08
0000454721,2023-03-27
0000464515,2023-04-11
0000477551,2023-05-05
0000481374,2023-05-10
0000227316,2022-01-10
0000260009,2022-03-01
0000265767,2022-03-11
0000287576,2022-05-02
0000324545,2022-07-28
0000332421,2022-08-20
0000365478,2022-11-25
0000365519,2022-11-25
0000375451,2023-01-02
0000379246,2023-01-15
0000415768,2023-02-13
0000478204,2023-05-08
0000481367,2023-05-10
0000508095,2023-07-09
0000511213,2023-07-17
0000194043,2021-10-29
0000211654,2021-12-02
0000260683,2022-03-01
0000260731,2022-03-01
0000318560,2022-07-17
0000336584,2022-09-01
0000343054,2022-09-21
0000415696,2023-02-13
0000439540,2023-03-09
0000449554,2023-03-20
0000467671,2023-04-14
0000469307,2023-04-18
0000336089,2022-01-01
0000197343,2021-11-01
0000251346,2022-02-10
0000322053,2022-07-25
0000336429,2022-08-31
0000342978,2022-09-21
0000359156,2022-11-10
0000411203,2023-02-10
0000502361,2023-06-22
0000517727,2023-08-02
0000524170,2023-08-18
0000524675,2023-08-21
0000264430,2022-03-11
0000264636,2022-03-11
0000265444,2022-03-11
0000265750,2022-03-11
0000278765,2022-04-11
0000347832,2022-10-06
0000356904,2022-11-01
0000372632,2022-12-18
0000375437,2023-01-02
0000396562,2023-02-06
0000516524,2023-07-29
0000195590,2021-10-29
0000263237,2022-03-09
0000264502,2022-03-11
0000264791,2022-03-11
0000265860,2022-03-11
0000266616,2022-03-11
0000278741,2022-04-11
0000336890,2022-09-02
0000366004,2022-11-25
0000260542,2022-03-01
0000260803,2022-03-01
0000264643,2022-03-11
0000265372,2022-03-11
0000266197,2022-03-11
0000278844,2022-04-11
0000280175,2022-04-13
0000281213,2022-04-14
0000295933,2022-05-24
0000296758,2022-05-26
0000381498,2023-01-20
0000388239,2023-02-01
0000429361,2023-02-24
0000435580,2023-03-06
0000438385,2023-03-08
0000454738,2023-03-27
0000481343,2023-05-10
0000508820,2023-07-11
0000197295,2021-11-01
0000197604,2021-11-01
0000197659,2021-11-01
0000251140,2022-02-10
0000251353,2022-02-10
0000260580,2022-03-01
0000264784,2022-03-11
0000266386,2022-03-11
0000344769,2022-09-26
0000364158,2022-11-22
0000364976,2022-11-24
0000372041,2022-12-14
0000373835,2022-12-22
0000400869,2023-02-07
0000439557,2023-03-09
0000468771,2023-04-18
0000478077,2023-05-08
0000504956,2023-06-29
0000508064,2023-07-08
0000513327,2023-07-21
0000197642,2021-11-01
0000260834,2022-03-01
0000265248,2022-03-11
0000265949,2022-03-11
0000333174,2022-08-22
0000360882,2022-11-14
0000438323,2023-03-08
0000494183,2023-06-04
0000251119,2022-02-10
0000251229,2022-02-10
0000265200,2022-03-11
0000266001,2022-03-11
0000335996,2022-08-31
0000485767,2023-05-17
0000522293,2023-08-12
0000201884,2021-11-15
0000207903,2021-11-26
0000266317,2022-03-11
0000278806,2022-04-11
0000294266,2022-05-20
0000305957,2022-06-16
0000321685,2022-07-22
0000360095,2022-11-11
0000454642,2023-03-26
0000457265,2023-03-29
0000459300,2023-03-31
0000477991,2023-05-06
0000481381,2023-05-10
0000503856,2023-06-25
0000488627,2022-01-01
0000211685,2021-12-02
0000226546,2022-01-04
0000241789,2022-01-26
0000271137,2022-03-23
0000280151,2022-04-13
0000370755,2022-12-09
0000381694,2023-01-20
0000437625,2023-03-07
0000482845,2023-05-11
0000491807,2023-05-28
0000494097,2023-06-02
0000495403,2023-06-07
0000507153,2023-07-06
0000513970,2023-07-23
0000528532,2023-08-30
0000197446,2021-11-01
0000206456,2021-11-26
0000266623,2022-03-11
0000290691,2022-05-11
0000339080,2022-09-08
0000415744,2023-02-13
0000449547,2023-03-20
0000532496,2023-09-12
0000195576,2021-10-29
0000198151,2021-11-03
0000198364,2021-11-15
0000283152,2022-04-21
0000335398,2022-08-29
0000363852,2022-11-22
0000365980,2022-11-25
0000370731,2022-12-09
0000377668,2023-01-10
0000444834,2023-03-14
0000461394,2023-04-05
0000461796,2023-04-05
0000502330,2023-06-21
0000531190,2023-09-07
0000251212,2022-02-10
0000260906,2022-03-01
0000265169,2022-03-11
0000265365,2022-03-11
0000344295,2022-09-23
0000367063,2022-11-29
0000367324,2022-11-30
0000368314,2022-12-02
0000431393,2023-02-28
0000469060,2023-04-18
0000469895,2023-04-19
0000480669,2023-05-10
0000513444,2023-07-21
0000265121,2022-03-11
0000266458,2022-03-11
0000266544,2022-03-11
0000302750,2022-06-08
0000324961,2022-07-29
0000352683,2022-10-20
0000415751,2023-02-13
0000429495,2023-02-24
0000442421,2023-03-12
0000494499,2023-06-05
0000509937,2023-07-13
0000527250,2023-08-26
0000197329,2021-11-01
0000198223,2021-11-03
0000207910,2021-11-26
0000226371,2022-01-04
0000226395,2022-01-04
0000264980,2022-03-11
0000265891,2022-03-11
0000321678,2022-07-22
0000325511,2022-08-01
0000416318,2023-02-14
0000454824,2023-03-27
0000480164,2023-05-10
0000260559,2022-03-01
0000265107,2022-03-11
0000279683,2022-04-12
0000338193,2022-09-07
0000433744,2023-03-02
0000451108,2023-03-22
0000478046,2023-05-06
0000488713,2023-05-23
0000532214,2023-09-12
0000198209,2021-11-03
0000198357,2021-11-15
0000205394,2021-11-24
0000263251,2022-03-09
0000264595,2022-03-11
0000265626,2022-03-11
0000323414,2022-07-26
0000395352,2023-02-06
0000442407,2023-03-12
0000452868,2023-03-24
0000470040,2023-04-19
0000480652,2023-05-10
0000494145,2023-06-03
0000498545,2023-06-15
0000500642,2023-06-20
0000527425,2023-08-28
0000529144,2023-08-31
0000533091,2023-09-13
0000195899,2021-10-29
0000260573,2022-03-01
0000264722,2022-03-11
0000266324,2022-03-11
0000278899,2022-04-11
0000323366,2022-07-26
0000402409,2023-02-08
0000411337,2023-02-10
0000414709,2023-02-13
0000415706,2023-02-13
0000420935,2023-02-17
0000429378,2023-02-24
0000459946,2023-04-03
0000513420,2023-07-21
0000530856,2023-09-06
0000226766,2022-01-05
0000229640,2022-01-10
0000260528,2022-03-01
0000322699,2022-07-25
0000323926,2022-07-27
0000388325,2023-02-01
0000461019,2023-04-04
0000481398,2023-05-10
0000482852,2023-05-11
0000492701,2023-05-31
0000508480,2023-07-11
0000529649,2023-09-01
0000194005,2021-10-25
0000197477,2021-11-01
0000197491,2021-11-01
0000260449,2022-03-01
0000260645,2022-03-01
0000265114,2022-03-11
0000266513,2022-03-11
0000267668,2022-03-14
0000278624,2022-04-11
0000279700,2022-04-12
0000352339,2022-10-20
0000364921,2022-11-23
0000466904,2023-04-14
0000480755,2023-05-10
0000511471,2023-07-17
0000523063,2023-08-15
0000197336,2021-11-01
0000201860,2021-11-15
0000210217,2021-11-30
0000226553,2022-01-04
0000260339,2022-03-01
0000265963,2022-03-11
0000359015,2022-11-10
0000362161,2022-11-17
0000368008,2022-12-01
0000448870,2023-03-17
0000468960,2023-04-18
0000513468,2023-07-21
0000201839,2021-11-15
0000265970,2022-03-11
0000266355,2022-03-11
0000275568,2022-04-04
0000325494,2022-08-01
0000407875,2023-02-09
0000464766,2023-04-12
0000478929,2023-05-08
0000480779,2023-05-10
0000481295,2023-05-10
0000491216,2023-05-26
0000493698,2023-06-02
0000504987,2023-06-29
0000511615,2023-07-18
0000530643,2023-09-05
0000198175,2021-11-03
0000264760,2022-03-11
0000265987,2022-03-11
0000317965,2022-07-14
0000329210,2022-08-12
0000349513,2022-10-13
0000481202,2023-05-10
0000496266,2023-06-08
0000517253,2023-07-31
0000197185,2021-11-01
0000209055,2021-11-30
0000214806,2021-12-13
0000229585,2022-01-10
0000232026,2022-01-14
0000323397,2022-07-26
0000329461,2022-08-12
0000337361,2022-09-03
0000337536,2022-09-05
0000349836,2022-10-14
0000372663,2022-12-18
0000375523,2023-01-02
0000442270,2023-03-11
0000449585,2023-03-20
0000455876,2023-03-27
0000467822,2023-04-15
0000507191,2023-07-06
0000264526,2022-03-11
0000266290,2022-03-11
0000279360,2022-04-11
0000292107,2022-05-16
0000355457,2022-10-27
0000379260,2023-01-15
0000433335,2023-03-02
0000449293,2023-03-19
0000480133,2023-05-10
0000480762,2023-05-10
0000481305,2023-05-10
0000523829,2023-08-17
0000529917,2023-09-02
0000027145,2022-01-01"""
    
#     accounts_with_dates = """account_number,inception_date
# 0000027145,2022-01-01"""

    accounts_df = pd.read_csv(io.StringIO(accounts_with_dates), sep=",",dtype='str')
    print(accounts_df)


    try:
        local_path = kwargs.get('local_path', '/tmp')
        os.makedirs(local_path, exist_ok=True)
        start_date_orig = datetime.strptime(START_DATE, '%Y-%m-%d') 
        date_file_path = f'/tmp/titan_transactions_v2.txt'
        check_file = os.path.exists(date_file_path)
        if check_file:
            with open(date_file_path,'r') as fil:
                start_date = fil.readline().strip()
            start_date = datetime.strptime(start_date, '%Y-%m-%d') + timedelta(days=1)
            if start_date_orig > start_date:
                start_date = start_date_orig
        else:
            start_date = start_date_orig  
        final_end_date = datetime.now()

        for single_date in date_range(start_date,final_end_date):
            print(f'Single Date  : {single_date}')
            start_date = datetime.strftime(single_date, '%m/%d/%Y')
            end_date = start_date
            accounts_file_path = f'/tmp/titan_transactions_v2_{datetime.strftime(single_date, "%Y-%m-%d")}.txt'
            for index, acc in accounts_df.iterrows():
                account_number = acc['account_number']
                inception_date = datetime.strptime(acc['inception_date'], '%Y-%m-%d') 
                print(f'Account Number is : {account_number}')
                print(f'Inception Date: {inception_date}')
                if single_date < inception_date:
                    continue
                if os.path.exists(accounts_file_path):
                    with open(accounts_file_path, 'r') as afil:
                        processed_accounts = afil.read()
                    if account_number in processed_accounts:
                        continue
                call_for_single_date(account_number=account_number,start_date=start_date,end_date=end_date)
                with open(accounts_file_path,'a') as afil:
                    afil.write(account_number +'\n')

            with open(date_file_path,'w') as fil:
                fil.write(datetime.strftime(single_date, '%Y-%m-%d'))
                


    except Exception as err:
        print(err)
        message = f"Function titan_transactions_api_download_as_csv_v2 failed : \n \n" + str(err)
        send_notification(type="error", message=message)
        raise AirflowException(message)


default_args = {
    "owner": "data engineers",
    "retries": 0,
    'on_failure_callback': ''
}

default_params ={
         "override_dates": 'N',
         "start_date": '1901-01-01',
         "end_date": '1901-01-01'
     }

with DAG(dag_id="titan_transactions_api_download_as_csv_history_v2",
         description="titan_transactions_api_download_as_csv_history_v2",
         default_args=default_args,
         max_active_runs=1,
         dagrun_timeout=timedelta(hours=3),
         schedule_interval="*/5 * * * *",
         start_date=datetime(2023, 8, 12, 8, 30),
         catchup=False,
         tags=["wema", "transactions", "download"],
         params=default_params
         
         ) as dag:
    START_TASK_ID = 'initial_empty_task'

    dummy_start = EmptyOperator(task_id=START_TASK_ID)

    titan_transactions_api_download_as_csv_v2 = PythonOperator(task_id='titan_transactions_api_download_as_csv_v2',
                                  python_callable=titan_transactions_api_download_as_csv_v2,
                                  op_kwargs={'local_path': '/tmp'},
                                  )
    dummy_start >> titan_transactions_api_download_as_csv_v2 


if __name__ == '__main__':
    dag.clear(reset_dag_runs=True)
    dag.run()
